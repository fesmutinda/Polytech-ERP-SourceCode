// namespace PolyTechERPSourceCode.PolyTechERPSourceCode;

report 51590 "Process Loan Monthly Interest"
{
    WordLayout = './Layouts/ProcessLoanMonthlyInterest.docx';
    DefaultLayout = Word;

    dataset
    {
        dataitem("Loans Register"; "Loans Register")
        {
            CalcFields = "Outstanding Balance";
            RequestFilterFields = "Issued Date", "Date filter", Source, "Loan  No.", "Client Code", "Account No", "Loan Product Type", "Oustanding Interest", "Interest Due", "Interest Paid", "Repayment Start Date";
            column(ReportForNavId_4645; 4645) { } // Autogenerated by ForNav - Do not delete
            // column(ReportForNav_Table51516371; ReportForNavWriteDataItem('"Loans Register"', "Loans Register")) { }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            column(Loans__Loan__No__; "Loan  No.")
            {
            }
            column(Loans__Application_Date_; "Application Date")
            {
            }
            column(Loans__Loan_Product_Type_; "Loan Product Type")
            {
            }
            column(Loans__Client_Code_; "Client Code")
            {
            }
            column(Loans__Client_Name_; "Client Name")
            {
            }
            column(Loans__Outstanding_Balance_; "Outstanding Balance")
            {
            }
            column(Loan_Application_FormCaption; Loan_Application_FormCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(Loans__Loan__No__Caption; FieldCaption("Loan  No."))
            {
            }
            column(Loans__Application_Date_Caption; FieldCaption("Application Date"))
            {
            }
            column(Loans__Loan_Product_Type_Caption; FieldCaption("Loan Product Type"))
            {
            }
            column(Loans__Client_Code_Caption; FieldCaption("Client Code"))
            {
            }
            column(Loans__Client_Name_Caption; FieldCaption("Client Name"))
            {
            }
            column(Loans__Outstanding_Balance_Caption; FieldCaption("Outstanding Balance"))
            {
            }
            trigger OnPreDataItem();
            begin
                if PostDate = 0D then
                    Error('Please create Interest period');
                if DocNo = '' then
                    Error('You must specify the Document No.');
                //delete journal line
                GenJournalLine.Reset;
                GenJournalLine.SetRange("Journal Template Name", 'GENERAL');
                GenJournalLine.SetRange("Journal Batch Name", 'INTRESTDUE');
                GenJournalLine.DeleteAll;
                //end of deletion
                GenBatches.Reset;
                GenBatches.SetRange(GenBatches."Journal Template Name", 'GENERAL');
                GenBatches.SetRange(GenBatches.Name, 'INTRESTDUE');
                if GenBatches.Find('-') = false then begin
                    GenBatches.Init;
                    GenBatches."Journal Template Name" := 'GENERAL';
                    GenBatches.Name := 'INTRESTDUE';
                    GenBatches.Description := 'Interest Due';
                    //GenBatches.VALIDATE(GenBatches."Journal Template Name");
                    //GenBatches.VALIDATE(GenBatches.Name);
                    GenBatches.Insert;
                end;
            end;

            trigger OnAfterGetRecord();
            begin
                PDate := "Loans Register".GetRangemax("Loans Register"."Date filter");
                SDATE := '..' + Format(PDate);
                if LoanType.Get("Loans Register"."Loan Product Type") then begin
                    //IF LoanType."Allowable Loan Offset(%)"=FALSE THEN
                    //BEGIN
                    //IF LoanType."Accrue Total Insurance"=FALSE THEN
                    //BEGIN
                    if Cust.Get("Loans Register"."BOSA No") then begin
                        if (Cust.Status <> Cust.Status::Deceased) then begin
                            loanapp.Reset;
                            loanapp.SetRange(loanapp."Loan  No.", "Loan  No.");
                            loanapp.SetFilter(loanapp."Outstanding Balance", '>%1', 0);
                            loanapp.SetFilter(loanapp."Date filter", SDATE);
                            if loanapp.Find('-') then begin
                                loanapp.CalcFields(loanapp."Outstanding Balance", loanapp."Oustanding Interest");
                                if (loanapp."Outstanding Balance" > 0) and (loanapp."Loan Product Type" <> '24') then begin
                                    if loanapp."Oustanding Interest" <= loanapp."Outstanding Balance" then begin
                                        LineNo := LineNo + 10000;
                                        GenJournalLine.Init;
                                        GenJournalLine."Journal Template Name" := 'GENERAL';
                                        GenJournalLine."Journal Batch Name" := 'INTRESTDUE';
                                        GenJournalLine."Line No." := LineNo;
                                        GenJournalLine."Account Type" := GenJournalLine."account type"::Customer;
                                        GenJournalLine."Account No." := loanapp."Client Code";
                                        GenJournalLine."Transaction Type" := GenJournalLine."transaction type"::"Interest Due";
                                        GenJournalLine.Validate(GenJournalLine."Account No.");
                                        GenJournalLine."Document No." := DocNo;
                                        GenJournalLine."Posting Date" := PostDate;
                                        GenJournalLine.Description := DocNo + ' ' + 'Interest charged';
                                        if loanapp."Repayment Method" = loanapp."repayment method"::"Straight Line" then begin
                                            //Added by D.O to handle Member Receipting prior to Interest Accrual
                                            if (loanapp."Disbursement Status" = loanapp."disbursement status"::Partial) and ((loanapp."Initial Trunch") = Date2dmy(Today, 2)) and ((loanapp."Amount To Disburse") = Date2dmy(Today, 3)) then begin
                                                GenJournalLine.Amount := loanapp."Total Charges and Commissions";
                                                //MESSAGE('Interest arrears %1',GenJournalLine.Amount);
                                            end else
                                                GenJournalLine.Amount := ROUND(loanapp."Approved Amount" * (loanapp.Interest / 1200), 1, '>')
                                        end else begin
                                            if (loanapp."Disbursement Status" = loanapp."disbursement status"::Partial) and ((loanapp."Initial Trunch") = Date2dmy(Today, 2)) and ((loanapp."Amount To Disburse") = Date2dmy(Today, 3)) then begin
                                                GenJournalLine.Amount := loanapp."Total Charges and Commissions";
                                                //MESSAGE('Interest arrears %1',GenJournalLine.Amount);
                                            end else
                                                GenJournalLine.Amount := ROUND(loanapp."Outstanding Balance" * (loanapp.Interest / 1200), 1, '>');
                                        end;
                                        GenJournalLine.Validate(GenJournalLine.Amount);
                                        if LoanType.Get(loanapp."Loan Product Type") then begin
                                            GenJournalLine."Bal. Account Type" := GenJournalLine."bal. account type"::"G/L Account";
                                            GenJournalLine."Bal. Account No." := LoanType."Loan Interest Account";
                                            GenJournalLine.Validate(GenJournalLine."Bal. Account No.");
                                        end;
                                        if loanapp.Source = loanapp.Source::" " then begin
                                            // GenJournalLine."Shortcut Dimension 1 Code":=FnProductSource(Product : Code[50]);'BOSA' ;
                                            if loanapp."Branch Code" = '' then
                                                loanapp."Branch Code" := 'Nairobi';
                                            GenJournalLine."Shortcut Dimension 2 Code" := loanapp."Branch Code";
                                        end;
                                        if loanapp.Source = loanapp.Source::BOSA then begin
                                            // GenJournalLine."Shortcut Dimension 1 Code":='FOSA' ;
                                            if loanapp."Branch Code" = '' then
                                                loanapp."Branch Code" := 'Nairobi';
                                            GenJournalLine."Shortcut Dimension 2 Code" := loanapp."Branch Code";
                                        end;
                                        GenJournalLine."Shortcut Dimension 1 Code" := FnProductSource(loanapp."Loan Product Type");

                                        if loanapp.Source = loanapp.Source::BOSA then begin
                                            GenJournalLine."Shortcut Dimension 1 Code" := Cust."Global Dimension 1 Code";
                                            GenJournalLine."Shortcut Dimension 2 Code" := Cust."Global Dimension 2 Code";
                                        end;
                                        GenJournalLine.Validate(GenJournalLine."Shortcut Dimension 1 Code");
                                        GenJournalLine.Validate(GenJournalLine."Shortcut Dimension 2 Code");
                                        GenJournalLine."Loan No" := loanapp."Loan  No.";
                                        if GenJournalLine.Amount <> 0 then
                                            GenJournalLine.Insert;
                                    end;
                                end;
                            end;
                        end;
                    end;
                    ///END;
                    //END;
                end;
            end;

            trigger OnPostDataItem();
            begin
                /*//Post New
				GenJournalLine.RESET;
				GenJournalLine.SETRANGE("Journal Template Name",Jtemplate);
				GenJournalLine.SETRANGE("Journal Batch Name",JBatch);
				IF GenJournalLine.FIND('-') THEN BEGIN
				CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post B",GenJournalLine);
				END;
				//Post New */

            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                field(PostDate; PostDate)
                {
                    ApplicationArea = Basic;
                    Caption = 'Posting Date';
                }
                field(DocNo; DocNo)
                {
                    ApplicationArea = Basic;
                    Caption = 'Document No.';
                }
                // field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                // {
                //     ApplicationArea = Basic;
                //     Caption = 'Design';
                //     Visible = ReportForNavAllowDesign;
                // }
            }
        }

    }

    trigger OnInitReport()
    begin
        //Accounting periods
        AccountingPeriod.SetRange(AccountingPeriod.Closed, false);
        if AccountingPeriod.Find('-') then begin
            FiscalYearStartDate := AccountingPeriod."Interest Calcuation Date";
            PostDate := (FiscalYearStartDate);
            DocNo := AccountingPeriod.Name + '  ' + Format(PostDate);
        end;
        //Accounting periods
        ;


    end;

    var
        GenBatches: Record "Gen. Journal Batch";
        PDate: Date;
        LoanType: Record "Loan Products Setup";
        PostDate: Date;
        Cust: Record Customer;
        LineNo: Integer;
        DocNo: Code[20];
        GenJournalLine: Record "Gen. Journal Line";
        GLPosting: Codeunit "Gen. Jnl.-Post Line";
        EndDate: Date;
        DontCharge: Boolean;
        Temp: Record "Funds General Setup";
        JBatch: Code[10];
        Jtemplate: Code[10];
        CustLedger: Record "Cust. Ledger Entry";
        AccountingPeriod: Record "Interest Due Period";
        FiscalYearStartDate: Date;
        "ExtDocNo.": Text[30];
        Loan_Application_FormCaptionLbl: label 'Loan Application Form';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        loanapp: Record "Loans Register";
        SDATE: Text[30];
        LDate: Date;

    local procedure FnProductSource(Product: Code[50]) Source: Code[50]
    var
        ObjProducts: Record "Loan Products Setup";
    begin
        ObjProducts.Reset;
        ObjProducts.SetRange(ObjProducts.Code, Product);
        if ObjProducts.Find('-') then begin
            if ObjProducts.Source = ObjProducts.Source::BOSA then
                Source := 'BOSA'
            else
                Source := 'FOSA';
        end;
        exit(Source);
    end;

}
